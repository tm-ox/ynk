---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import Base from "../../layouts/Base.astro";
import Logo from "../../components/Logo.astro";
import { Icon } from "astro-icon";

export async function getStaticPaths() {
  const events = await getCollection("events", ({ data }) => {
    return data.images && data.images.length > 0;
  });
  events.sort((b, a) => Date.parse(a.data.date) - Date.parse(b.data.date));
  const images = [...new Set(events.map((event) => event.data.images).flat())];
  const numberOfImages = images.length;
  return images.map((image: any, i) => ({
    params: {
      slug: image.id,
    },
    props: {
      image,
      nextImage: i + 1 === numberOfImages ? { data: "" } : images[i + 1],
      prevImage: i === 0 ? { data: "" } : images[i - 1],
    },
  }));
}

const { image, prevImage, nextImage } = Astro.props;
---

<Base>
  <nav slot="header" class="flex gap-3 justify-between">
    <Logo />
    <div class="flex items-center ml-auto gap-1">
      {
        prevImage.id && (
          <a href={`/images/${prevImage.id}/`}>
            <Icon name="ion:arrow-back-sharp" class="icon" />
          </a>
        )
      }
      {
        nextImage.id && (
          <a href={`/images/${nextImage.id}/`}>
            <Icon name="ion:arrow-forward-sharp" class="icon" />
          </a>
        )
      }
      <a href="/images">
        <Icon name="ion:close-sharp" class="icon" />
      </a>
    </div>
  </nav>
  <section transition:name={image.id}>
    <hr class="mb-2" />
    <div class="flex flex-col md:flex-row gap-4">
      <Image
        src={image.src}
        alt={image.alt}
        class="h-auto object-contain my-1 mb-auto"
      />
    </div>
    <hr class="mt-3" />
  </section>
</Base>
