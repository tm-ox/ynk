---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

const events = await getCollection("events");
events.sort((b, a) => Date.parse(a.data.date) - Date.parse(b.data.date));
const {
  eventImages = [...new Set(events.map((event) => event.data.test).flat())],
} = Astro.props;
---

<div x-data={`{ eventImages: ${JSON.stringify(eventImages)}}`}>
  <section>
    <script is:inline>
      function carousel() {
        return {
          images: JSON.parse(this.eventImages),
          activeImage: null,
          prev() {
            let index = this.images.indexOf(this.activeImage);
            if (index === 0) index = this.images.length;
            this.activeImage = this.images[index - 1];
          },
          next() {
            let index = this.images.indexOf(this.activeImage);
            if (index === this.images.length - 1) index = -1;
            this.activeImage = this.images[index + 1];
          },
          init() {
            this.activeImage = this.images.length > 0 ? this.images[0] : null;
          },
        };
      }
    </script>
    <div x-data="carousel()">
      <div x-data class="relative">
        <template x-for="image in images">
          <div x-show="activeImage === image">
            <img :src="activeImage" alt="image.alt" width="100" height="100" />
          </div>
        </template>
        <button
          @click="prev"
          class="absolute left-1/2 -translate-x-[108%] bottom-2">&#8672;</button
        >
        <button
          @click="next"
          class="absolute left-1/2 translate-x-[8%] bottom-2">&#8674;</button
        >
      </div>
      <div class="flex gap-1 mt-1 items-center">
        <template x-for="image in eventImages">
          <a @click="activeImage = image" class="w-full cursor-pointer">
            <img :src="image.src" alt="image.alt" width="auto" height="auto" />
          </a>
        </template>
      </div>
    </div>
  </section>
</div>
